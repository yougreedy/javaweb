<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 이 파일이 담고있는 sql문들 집합의 고유한 이름을 namespace 속성값으로 설정  -->
  <!-- 일반적으로 이 sql문들을 실행할때 사용할 dao인테페이스 이름을 지정 -->
<mapper namespace="com.exam.member.MemberDao">
   <!-- resultMap -->
   <!--resultMap 을 사용하여 조회결과의 어떤 컬럼값을 MemberVo 객체의 어떤 속성(변수)에 담을지(저장) 설명-->
<resultMap type="com.exam.member.MemberVo" id="MemberMap">
   <!--기본키(pk)에 해당된는 컬럼에 대해서는 result 대산 id 태크 사용-->
  <id property="memId" column="mem_id" />
  <result property="memPass" column="mem_Pass" />
  <result property="memName" column="mem_Name" />
  <result property="memPoint" column="mem_Point" />    
</resultMap>

  <!-- 등록할 sql문과 동일한 이름의 태그를 사용하여 sql을 등록 -->
  <!-- 이 파일 내에서 해당 sql문의 고유한 이름을 id 속성값으로 설정 -->
  <!-- 일반적으로 이 sql문을 실행할 때 사용할 dao인터페이스 메서드 이름을 지정 -->
  <!-- select 실핼 결과의 한 행(row)를 담을 객체의 클래스명으로 resultType 속성에 설정 -->
  <select id="selectMemberList" resultType="MemberVo"> 
  <!--resultMap속성을 사용하여, id가 MemberMap인 resultMap에 써놓은대로 조회결과를 담도록 설정-->
  <!--  <select id="selectMemberList" resultMap="MemberMap">-->
    SELECT mem_id, mem_Pass, mem_Name, mem_Point FROM MEMBER
  </select>
  
    <select id="selectMember" resultType="MemberVo"> 
  <!--resultMap속성을 사용하여, id가 MemberMap인 resultMap에 써놓은대로 조회결과를 담도록 설정-->
  <!--  <select id="selectMemberList" resultMap="MemberMap">-->
    SELECT mem_id, mem_Pass, mem_Name, mem_Point FROM MEMBER
    WHERE mem_id = #{memId}
  </select>
  
 <!-- sql문 실행시 전달받는 데이터의 타입을 parameterType 속성에 지정 가능(생략도 가능)-->
  <insert id="insertMember" parameterType="MemberVo">
     insert into member ( mem_id, mem_pass, mem_name, mem_point ) 
	 values ( #{memId}, #{memPass}, #{memName}, #{memPoint} )
  </insert>
 <!-- 파라미터(인자)로 받은, 객체의 속성(변수)값들을 sql문 내에 사용하기 위해서,
  #{속성명} 또는 ${속성명} 표현을 사용
  #{속성명} : jdbc의 ? 채우기와 같으 방식으로 동작
  ${속성명} : 문자열 이어붙이기 방식으로 동작 (보안상 위험하므로 가급적 사용자제)
  -->
  
  <delete id="deleteMember" parameterType="string">
    delete from member where mem_id = #{memId}
  </delete>
 <!-- 문자열, 정수 등 단일값을 갖는 데이터를 파라미터(인자)로 받은 경우,
  #{속성명} 의 속성명에는 어떤 이름을 써도 무방
  일반적으로 value 또는 변수명을 사용  -->
  
  
  
</mapper>










